name: Notificar Nova Release (API v1)

on:
  # Gatilho para quando uma release for publicada ou promovida
  release:
    types: [released]
  
  # --- ADICIONADO AQUI ---
  # Gatilho para execu√ß√£o manual (gera o bot√£o de teste)
  workflow_dispatch:

jobs:
  notificar:
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Autenticar com Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'

      - name: 'Obter Token de Acesso'
        id: get_access_token
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: 'Enviar Notifica√ß√£o de Nova Vers√£o'
        # --- MODIFICADO AQUI ---
        # Define uma vari√°vel de ambiente para lidar com os dois gatilhos
        env:
          # Se o gatilho for uma 'release', usa a tag da release.
          # Se for manual ('workflow_dispatch'), usa o texto 'TESTE MANUAL'.
          VERSION_NAME: ${{ github.event.release.tag_name || 'TESTE MANUAL' }}
        run: |
          if [ "${{ github.event.release.prerelease }}" != "true" ]; then
            curl -X POST \
              -H "Authorization: Bearer ${{ steps.get_access_token.outputs.access_token }}" \
              -H "Content-Type: application/json" \
              -d '{
                "message": {
                  "topic": "all",
                  "notification": {
                    "title": "Nova atualiza√ß√£o do Zenith WMS! üöÄ",
                    "body": "A vers√£o ${{ env.VERSION_NAME }} est√° dispon√≠vel."
                  },
                  "data": {
                    "version": "${{ env.VERSION_NAME }}"
                  }
                }
              }' \
              https://fcm.googleapis.com/v1/projects/zenith-wms/messages:send
          else
            echo "Release √© uma pr√©-release. Nenhuma notifica√ß√£o enviada."
          fi
